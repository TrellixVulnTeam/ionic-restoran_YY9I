{"version":3,"sources":["webpack:///src/app/register/register-routing.module.ts","webpack:///src/app/register/register.module.ts","webpack:///src/app/register/register.page.ts","webpack:///src/app/register/register.page.scss","webpack:///src/app/register/register.page.html"],"names":["routes","path","component","RegisterPage","RegisterPageRoutingModule","NgModule","imports","RouterModule","exports","RegisterPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","http","ls","toast","navCtrl","formBuilder","user","wilayah","listWilayah","regForm","group","nama","Validators","email","password","cpassword","id_wilayah","errorMessages","type","message","get","present","post","environment","value","subscribe","res","console","log","dismiss","showToast","status","navigateRoot","list","str","create","duration","position","buttons","text","handler","then","x","getWilayah","HttpClient","LoadingService","ToastController","NavController","FormBuilder","Component","selector","template"],"mappings":"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","file":"src_app_register_register_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { IonicModule } from '@ionic/angular';\nimport { RegisterPageRoutingModule } from './register-routing.module';\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n      ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoadingService } from '../services/loading.service';\nimport { ToastController } from '@ionic/angular';\nimport {environment} from '../../environments/environment';\nimport { NavController } from '@ionic/angular';\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  user: any = {};\n  wilayah: any ={};\n  listWilayah: any =  [];\n  constructor( private http: HttpClient,\n               private ls: LoadingService,\n               private toast: ToastController,\n               public navCtrl: NavController,\n               private formBuilder: FormBuilder\n  ) { }\n\n  regForm = this.formBuilder.group({\n    nama:['', [Validators.required]],\n    email:['', [Validators.required]],\n    password:['',[Validators.required]],\n    cpassword:['', [Validators.required]],\n    id_wilayah:['', [Validators.required]]\n  });\n\n  get nama(){\n    return this.regForm.get('nama');\n  }\n  get email(){\n    return this.regForm.get('email');\n  }\n  get password(){\n    return this.regForm.get('password');\n  }\n  get cpassword(){\n    return this.regForm.get('cpassword');\n  }\n  get id_wilayah(){\n    return this.regForm.get('id_wilayah');\n  }\n\n  public errorMessages = {\n    nama:[\n      { type: 'required', message: 'Nama harus diisi'}\n    ],\n    email:[\n      { type: 'required', message: 'Email harus diisi'}\n    ],\n    password:[\n      { type: 'required', message: 'Password harus diisi'}\n    ],\n    cpassword:[\n      { type: 'required', message: 'Konfirmasi password harus diisi'}\n    ],\n    id_wilayah:[\n      { type: 'required', message: 'Wilayah harus diisi'}\n    ]\n  }\n\n  doRegister(){\n    this.ls.present();\n    this.http.post(environment.baseUrl + 'auth/register.php', this.regForm.value).subscribe((res: any) => {\n      console.log(res);\n      this.ls.dismiss();\n      this.showToast(res.message);\n      if (res.status === 1){\n        this.navCtrl.navigateRoot('/');\n      }\n    });\n  }\n\n  getWilayah(){\n    this.http.get(environment.baseUrl + 'wilayah/list_wilayah.php').subscribe((res: any) => {\n      this.ls.present();\n      console.log(res);\n      this.listWilayah = res.list;\n      this.ls.dismiss();\n    });\n  }\n\n\n  async showToast(str){\n    await this.toast.create({\n      message: str,\n      duration: 2000,\n      position: 'bottom',\n      buttons: [{\n        text: 'OK',\n        handler: () => {\n          console.log('OK Clicked');\n        }\n      }]\n    }).then(x => x.present());\n  }\n\n\n  ngOnInit() {\n    this.getWilayah();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [class.ion-padding]=\\\"20\\\">\\n\\n  <br>\\n  <form [formGroup]=\\\"regForm\\\" (ngSubmit)=\\\"doRegister()\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Nama</ion-label>\\n      <ion-input formControlName=\\\"nama\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.nama\\\">\\n      <ng-container *ngIf=\\\"nama.hasError(error.type) && (nama.dirty || nama.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.email\\\">\\n      <ng-container *ngIf=\\\"email.hasError(error.type) && (email.dirty || email.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" ></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.password\\\">\\n      <ng-container *ngIf=\\\"password.hasError(error.type) && (password.dirty || password.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Ulangi password</ion-label>\\n      <ion-input formControlName=\\\"cpassword\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.cpassword\\\">\\n      <ng-container *ngIf=\\\"cpassword.hasError(error.type) && (cpassword.dirty || cpassword.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label>Wilayah</ion-label>\\n      <ion-select formControlName=\\\"id_wilayah\\\">\\n        <ion-select-option *ngFor=\\\"let item of listWilayah;\\\" value=\\\"{{item.id}}\\\">{{item.nama}} </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.id_wilayah\\\">\\n      <ng-container *ngIf=\\\"id_wilayah.hasError(error.type) && (id_wilayah.dirty || id_wilayah.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <br>\\n    <ion-button [disabled]=\\\"!regForm.valid\\\" type=\\\"submit\\\" expand=\\\"full\\\">Submit</ion-button>\\n  </form>\\n</ion-content>\\n\";"]}