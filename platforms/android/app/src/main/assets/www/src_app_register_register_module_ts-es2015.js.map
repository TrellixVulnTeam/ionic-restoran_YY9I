{"version":3,"sources":["./src/app/register/register-routing.module.ts","./src/app/register/register.module.ts","./src/app/register/register.page.ts","./src/app/register/register.page.scss","./src/app/register/register.page.html"],"names":[],"mappings":"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","file":"src_app_register_register_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { IonicModule } from '@ionic/angular';\nimport { RegisterPageRoutingModule } from './register-routing.module';\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n      ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoadingService } from '../services/loading.service';\nimport { ToastController } from '@ionic/angular';\nimport {environment} from '../../environments/environment';\nimport { NavController } from '@ionic/angular';\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  user: any = {};\n  wilayah: any ={};\n  listWilayah: any =  [];\n  constructor( private http: HttpClient,\n               private ls: LoadingService,\n               private toast: ToastController,\n               public navCtrl: NavController,\n               private formBuilder: FormBuilder\n  ) { }\n\n  regForm = this.formBuilder.group({\n    nama:['', [Validators.required]],\n    email:['', [Validators.required]],\n    password:['',[Validators.required]],\n    cpassword:['', [Validators.required]],\n    id_wilayah:['', [Validators.required]]\n  });\n\n  get nama(){\n    return this.regForm.get('nama');\n  }\n  get email(){\n    return this.regForm.get('email');\n  }\n  get password(){\n    return this.regForm.get('password');\n  }\n  get cpassword(){\n    return this.regForm.get('cpassword');\n  }\n  get id_wilayah(){\n    return this.regForm.get('id_wilayah');\n  }\n\n  public errorMessages = {\n    nama:[\n      { type: 'required', message: 'Nama harus diisi'}\n    ],\n    email:[\n      { type: 'required', message: 'Email harus diisi'}\n    ],\n    password:[\n      { type: 'required', message: 'Password harus diisi'}\n    ],\n    cpassword:[\n      { type: 'required', message: 'Konfirmasi password harus diisi'}\n    ],\n    id_wilayah:[\n      { type: 'required', message: 'Wilayah harus diisi'}\n    ]\n  }\n\n  doRegister(){\n    this.ls.present();\n    this.http.post(environment.baseUrl + 'auth/register.php', this.regForm.value).subscribe((res: any) => {\n      console.log(res);\n      this.ls.dismiss();\n      this.showToast(res.message);\n      if (res.status === 1){\n        this.navCtrl.navigateRoot('/');\n      }\n    });\n  }\n\n  getWilayah(){\n    this.http.get(environment.baseUrl + 'wilayah/list_wilayah.php').subscribe((res: any) => {\n      this.ls.present();\n      console.log(res);\n      this.listWilayah = res.list;\n      this.ls.dismiss();\n    });\n  }\n\n\n  async showToast(str){\n    await this.toast.create({\n      message: str,\n      duration: 2000,\n      position: 'bottom',\n      buttons: [{\n        text: 'OK',\n        handler: () => {\n          console.log('OK Clicked');\n        }\n      }]\n    }).then(x => x.present());\n  }\n\n\n  ngOnInit() {\n    this.getWilayah();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [class.ion-padding]=\\\"20\\\">\\n\\n  <br>\\n  <form [formGroup]=\\\"regForm\\\" (ngSubmit)=\\\"doRegister()\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Nama</ion-label>\\n      <ion-input formControlName=\\\"nama\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.nama\\\">\\n      <ng-container *ngIf=\\\"nama.hasError(error.type) && (nama.dirty || nama.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.email\\\">\\n      <ng-container *ngIf=\\\"email.hasError(error.type) && (email.dirty || email.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" ></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.password\\\">\\n      <ng-container *ngIf=\\\"password.hasError(error.type) && (password.dirty || password.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Ulangi password</ion-label>\\n      <ion-input formControlName=\\\"cpassword\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.cpassword\\\">\\n      <ng-container *ngIf=\\\"cpassword.hasError(error.type) && (cpassword.dirty || cpassword.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label>Wilayah</ion-label>\\n      <ion-select formControlName=\\\"id_wilayah\\\">\\n        <ion-select-option *ngFor=\\\"let item of listWilayah;\\\" value=\\\"{{item.id}}\\\">{{item.nama}} </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.id_wilayah\\\">\\n      <ng-container *ngIf=\\\"id_wilayah.hasError(error.type) && (id_wilayah.dirty || id_wilayah.touched)\\\">\\n        <center><small>{{ error.message }}</small></center>\\n      </ng-container>\\n    </div>\\n\\n    <br>\\n    <ion-button [disabled]=\\\"!regForm.valid\\\" type=\\\"submit\\\" expand=\\\"full\\\">Submit</ion-button>\\n  </form>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}